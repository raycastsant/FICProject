/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserPanel.java
 *
 * Created on 21/12/2012, 10:03:49 AM
 */

package cif.gui.usuarios;

import cif.adminstration.utiles.Utils;
import cif.bd.BDUtilities;
import cif.manage.UserTypes;
import cif.utiles.Adv_ComboBox;
import java.awt.Color;
import java.awt.Container;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Pedro
 */
public class UserPanel extends javax.swing.JPanel
{
    private static final int INSERT = 0;
    private static final int UPDATE = 1;
    private int action, old_tipo;
    private String old_login;
    private boolean change_passw = false;
    /** Creates new form UserPanel */
    public UserPanel() {
        init();
        FillCombo(BDUtilities.getUserType(),user_type_field);
        FillCombo(BDUtilities.getProvincias(),prov_field);
        action = INSERT;
    }

    public UserPanel(String login, String propiet, String tipo_usuario, String prov, String munic, String us, String ap, String efi)
    {
        //us , ap y efi lo que viene es el id de la entidad no el nombre
        init();
        FillCombo(BDUtilities.getUserType(),user_type_field);
        FillCombo(BDUtilities.getProvincias(),prov_field);
        login_field.setText(login);
        old_login = login;
        passw_field.setText("basura");
        repeat_passw_field.setText("basura");
        prop_field.setText(propiet);
        user_type_field.setSelectedItem(tipo_usuario);
        old_tipo = (Integer)user_type_field.getSelectedValue();
        prov_field.setSelectedItem(prov);
        FillCombo(BDUtilities.getMunicipios(prov_field.getSelectedValue().toString()),munic_field);
        munic_field.setSelectedItem(munic);
        if(us != null)
        {
            FillCombo(BDUtilities.getUSFromMunic(munic_field.getSelectedValue().toString()),us_field);
            us_field.setSelectedValue(us);
        }
        if(ap != null)
        {
            FillCombo(BDUtilities.getAPFromMunic(munic_field.getSelectedValue().toString()),ap_field);
            ap_field.setSelectedValue(ap);
        }
        if(efi != null)
        {
            FillCombo(BDUtilities.getEFIFromProv(prov_field.getSelectedValue().toString()),efi_field);
            efi_field.setSelectedValue(efi);
        }
        action = UPDATE;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        login_field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        passw_field = new javax.swing.JPasswordField();
        repeat_passw_field = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        acept = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        jLabel1.setText("*Usuario:");

        login_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_fieldActionPerformed(evt);
            }
        });
        login_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                login_fieldKeyTyped(evt);
            }
        });

        jLabel2.setText("*Contraseña:");

        jLabel3.setText("*Repita la contraseña:");

        jLabel4.setText("Tipo de usuario:");

        jLabel5.setText("Propietario:");

        jLabel6.setText("Municipio:");

        jLabel7.setBackground(new java.awt.Color(204, 0, 0));
        jLabel7.setText("Provincia:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Entidad"));

        jLabel8.setText("U.Silvícola:");

        jLabel9.setText("A. Protegida:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        cancel.setText("Cancelar");
        cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelMouseClicked(evt);
            }
        });

        acept.setText("Aceptar");

        jLabel10.setText("(*) Obligatorio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(17, 17, 17))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(repeat_passw_field, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passw_field)
                            .addComponent(login_field, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(acept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(28, 28, 28)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancel)
                            .addComponent(acept)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(login_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(passw_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(repeat_passw_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addComponent(jLabel5)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jLabel10)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void init() {

        jLabel1 = new javax.swing.JLabel();
        login_field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        passw_field = new javax.swing.JPasswordField();
        repeat_passw_field = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        user_type_field = new Adv_ComboBox();
        jLabel5 = new javax.swing.JLabel();
        prop_field = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        munic_field = new Adv_ComboBox();
        jLabel7 = new javax.swing.JLabel();
        prov_field = new Adv_ComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        us_field = new Adv_ComboBox();
        ap_field = new Adv_ComboBox();
        efi_field = new Adv_ComboBox();
        cancel = new javax.swing.JButton();
        acept = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("*Usuario:");

        jLabel2.setText("*Contraseña:");

        jLabel3.setText("*Repita la contraseña:");

        jLabel4.setText("*Tipo de usuario:");

        jLabel5.setText("*Propietario:");

        jLabel6.setText("Municipio:");

        jLabel7.setText("Provincia:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Entidad"));

        jLabel8.setText("U.Silvícola:");

        jLabel9.setText("A. Protegida:");

        jLabel11.setText("EFI:");

        jPanel1.setEnabled(false);

        prov_field.setEnabled(false);
        munic_field.setEnabled(false);
        us_field.setEnabled(false);
        ap_field.setEnabled(false);
        efi_field.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(us_field, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ap_field, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(efi_field, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(us_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ap_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(efi_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        login_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                login_fieldKeyTyped(evt);
            }
        });

        prop_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prop_fieldKeyTyped(evt);
            }
        });

        passw_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passw_fieldKeyTyped(evt);
            }
        });

        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/button-cancel.png")));
        cancel.setText("Cancelar");
        cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelMouseClicked(evt);
            }
        });

        acept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/button-accept.png")));
        acept.setText("Aceptar");
        acept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aceptMouseClicked(evt);
            }
        });

        user_type_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_typeActionPerformed(evt);
            }
        });

        prov_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provActionPerformed(evt);
            }
        });

        munic_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                municActionPerformed(evt);
            }
        });

        us_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntityActionPerformed(evt);
            }
        });

        ap_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntityActionPerformed(evt);
            }
        });

        jLabel10.setText("(*) Obligatorio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(17, 17, 17)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(repeat_passw_field, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(passw_field)
                                        .addComponent(login_field, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(user_type_field, javax.swing.GroupLayout.Alignment.TRAILING, 0, 145, Short.MAX_VALUE)
                                            .addComponent(prop_field, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(prov_field, 0, 202, Short.MAX_VALUE)
                                    .addComponent(munic_field, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(acept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(login_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(passw_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(repeat_passw_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prop_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(user_type_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(prov_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(munic_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(acept)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>


    private void login_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_login_fieldActionPerformed

    private void cancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelMouseClicked
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1)
        {
            setVisible(false);
        }
    }//GEN-LAST:event_cancelMouseClicked

    private void login_fieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_login_fieldKeyTyped
        if(!Character.isDigit(evt.getKeyChar()) && !Character.isLetter(evt.getKeyChar())
           && evt.getKeyChar() != '.' && evt.getKeyChar() != '_')
        {
            evt.consume();
        }
    }//GEN-LAST:event_login_fieldKeyTyped

    private void prop_fieldKeyTyped(java.awt.event.KeyEvent evt) {
        if(!Character.isLetter(evt.getKeyChar()) && evt.getKeyChar() != ' ')
        {
            evt.consume();
        }
    }

    private void passw_fieldKeyTyped(java.awt.event.KeyEvent evt)
    {
        change_passw = true;
    }

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {
        if(evt.getAncestorParent() instanceof Container)
        {
            login_field.requestFocusInWindow();
        }
    }

    private void aceptMouseClicked(java.awt.event.MouseEvent evt)
    {
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1)
        {
            boolean error = false;
            boolean passw_error = false;
            String login,passw,prop,prov="",munic="",id_entidad="";
            int tipo_usuario;
            login = login_field.getText();
            if(login.isEmpty())
            {
                error = true;
                jLabel1.setForeground(Color.red);
            }
            else
            {
                jLabel1.setForeground(Color.black);
            }
            passw = new String(passw_field.getPassword());
            if(passw.isEmpty() || !passw.equals(new String(repeat_passw_field.getPassword())))
            {
                passw_error = true;
                jLabel2.setForeground(Color.red);
            }
            else
            {
                passw_error = false;
                jLabel2.setForeground(Color.black);
            }
            prop = prop_field.getText();
            if(prop.isEmpty())
            {
                error = true;
                jLabel5.setForeground(Color.red);
            }
            else
            {
                jLabel5.setForeground(Color.black);
            }
            tipo_usuario = (Integer)user_type_field.getSelectedValue();
            if(tipo_usuario == -1)
            {
                error = true;
                jLabel4.setForeground(Color.red);
            }
            else
            {
                jLabel4.setForeground(Color.black);
            }
            if(tipo_usuario != -1)
            {
                UserTypes type = UserTypes.values()[tipo_usuario-1];
                prov = prov_field.getSelectedValue().toString();
                Object obj = munic_field.getSelectedValue();
                munic = null;
                if(obj != null)
                {
                    munic = obj.toString();
                }
                if(type != UserTypes.Nacional)
                {
                    if(prov.equals("-1"))
                    {
                        error = true;
                        jLabel7.setForeground(Color.red);
                    }
                    else
                    {
                        jLabel7.setForeground(Color.black);
                    }
                    if(type == UserTypes.Provincial || type == UserTypes.EFI)
                    {
                        if((!prov.equals("-1") && munic == null) || (!prov.equals("-1") && munic.equals("-1")))
                        {
                            munic = munic_field.getValues()[1].toString();
                        }
                    }
                    if(type == UserTypes.Municipal || type == UserTypes.Unidad_Silvicola || type == UserTypes.Area_Protegida)
                    {
                        if(munic == null || munic.equals("-1") )
                        {
                            error = true;
                            jLabel6.setForeground(Color.red);
                        }
                        else
                        {
                            jLabel6.setForeground(Color.black);
                        }
                    }
                    if(type == UserTypes.Area_Protegida)
                    {
                        if(ap_field.getSelectedValue() == null)
                        {
                            error = true;
                            jLabel9.setForeground(Color.red);
                        }
                        else
                        {
                            id_entidad = ap_field.getSelectedValue().toString();
                            if(id_entidad.equals("-1"))
                            {
                                error = true;
                                jLabel9.setForeground(Color.red);
                            }
                            else
                            {
                                jLabel9.setForeground(Color.black);
                            }
                        }
                    }
                    else if(type == UserTypes.Unidad_Silvicola)
                    {
                        if(us_field.getSelectedValue() == null)
                        {
                            error = true;
                            jLabel8.setForeground(Color.red);
                        }
                        else
                        {
                            id_entidad = us_field.getSelectedValue().toString();
                            if(id_entidad.equals("-1"))
                            {
                                error = true;
                                jLabel8.setForeground(Color.red);
                            }
                            else
                            {
                                jLabel8.setForeground(Color.black);
                            }
                        }
                    }
                    else if(type == UserTypes.EFI)
                    {
                        if(efi_field.getSelectedValue() == null)
                        {
                            error = true;
                            jLabel11.setForeground(Color.red);
                        }
                        else
                        {
                            id_entidad = efi_field.getSelectedValue().toString();
                            if(id_entidad.equals("-1"))
                            {
                                error = true;
                                jLabel11.setForeground(Color.red);
                            }
                            else
                            {
                                jLabel11.setForeground(Color.black);
                            }
                        }
                    }
                }
                else
                {
                    prov = prov_field.getValues()[1].toString();
                    munic = BDUtilities.getMunicipios(prov)[0][0].toString();
                }
            }
            if(passw_error)
            {
                JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Las contraseñas no coinciden.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(error)
            {
                JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Existen campos en blanco que son de caracter obligatorio.", "Error", JOptionPane.ERROR_MESSAGE);
                error = false;
                return;
            }
            else
            {
                try
                {
                    if(action == INSERT)
                    {
                        BDUtilities.InsertUser(login, passw, prop, tipo_usuario, prov, munic, id_entidad);
                        ResetWindow();
                    }
                    else
                    {
                        BDUtilities.ModifyUser(login, passw, prop, tipo_usuario, prov, munic, id_entidad, old_login, old_tipo, change_passw);
                        JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Los datos se modificaron satisfactoriamente.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }
    }

    private void FillCombo(Object[][] types, Adv_ComboBox combo)
    {
        combo.addItem(-1, "<Seleccionar>");
        for(int i=0; i<types.length; i++)
        {
            Object[] aux = types[i];
            combo.addItem(aux[0], aux[1]);
        }
    }

    private void ResetCombo(JComboBox combo,boolean erase)
    {
        if(erase)
        {
            combo.removeAllItems();
            return;
        }
        combo.setSelectedIndex(0);
    }

    private void user_typeActionPerformed(java.awt.event.ActionEvent evt)
    {
        if((Integer)user_type_field.getSelectedValue() == -1)
        {
            if(ap_field.isEnabled())
            {
                ResetCombo(ap_field,false);
            }
            if(us_field.isEnabled())
            {
                ResetCombo(us_field,false);
            }
            if(prov_field.isEnabled())
            {
                ResetCombo(prov_field,false);
            }
            if(munic_field.isEnabled())
            {
                ResetCombo(munic_field,false);
            }
            prov_field.setEnabled(false);
            ap_field.setEnabled(false);
            us_field.setEnabled(false);
            efi_field.setEnabled(false);
            munic_field.setEnabled(false);
            jLabel6.setText(getWithoutAster(jLabel6.getText()));
            jLabel7.setText(getWithoutAster(jLabel7.getText()));
            jLabel8.setText(getWithoutAster(jLabel8.getText()));
            jLabel9.setText(getWithoutAster(jLabel9.getText()));
            jLabel11.setText(getWithoutAster(jLabel11.getText()));
        }
        else
        {
            prov_field.setEnabled(true);
            ap_field.setEnabled(false);
            us_field.setEnabled(false);
            efi_field.setEnabled(false);
            munic_field.setEnabled(false);
            ResetCombo(ap_field, true);
            ResetCombo(us_field, true);
            ResetCombo(efi_field, true);
            ResetCombo(munic_field, true);
            ResetCombo(prov_field, false);
            UserTypes type = UserTypes.values()[(Integer)user_type_field.getSelectedValue()-1];
            if(type != UserTypes.Nacional && type != UserTypes.Provincial && type != UserTypes.EFI)
            {
                if(!hasAsterFirst(jLabel6.getText()))
                {
                    jLabel6.setText("*"+jLabel6.getText());
                }
                if(!hasAsterFirst(jLabel7.getText()))
                {
                    jLabel7.setText("*"+jLabel7.getText());
                }
            }
            else if(type == UserTypes.Nacional)
            {
                jLabel6.setText(getWithoutAster(jLabel6.getText()));
                jLabel7.setText(getWithoutAster(jLabel7.getText()));
                jLabel9.setText(getWithoutAster(jLabel9.getText()));
                jLabel8.setText(getWithoutAster(jLabel8.getText()));
                jLabel11.setText(getWithoutAster(jLabel11.getText()));
            }
            else if(type == UserTypes.Provincial)
            {
                if(!hasAsterFirst(jLabel7.getText()))
                {
                    jLabel7.setText("*"+jLabel7.getText());
                }
                jLabel6.setText(getWithoutAster(jLabel6.getText()));
                jLabel9.setText(getWithoutAster(jLabel9.getText()));
                jLabel8.setText(getWithoutAster(jLabel8.getText()));
            }
            else if(type == UserTypes.EFI)
            {
                if(!hasAsterFirst(jLabel11.getText()))
                {
                    jLabel11.setText("*"+jLabel11.getText());
                }
                jLabel6.setText(getWithoutAster(jLabel6.getText()));
                jLabel9.setText(getWithoutAster(jLabel9.getText()));
                jLabel8.setText(getWithoutAster(jLabel8.getText()));
            }
            if(type == UserTypes.Area_Protegida)
            {
                jLabel9.setText("*"+jLabel9.getText());
                jLabel8.setText(getWithoutAster(jLabel8.getText()));
                jLabel11.setText(getWithoutAster(jLabel11.getText()));
            }
            else if(type == UserTypes.Unidad_Silvicola)
            {
                jLabel8.setText("*"+jLabel8.getText());
                jLabel9.setText(getWithoutAster(jLabel9.getText()));
                jLabel11.setText(getWithoutAster(jLabel11.getText()));
            }
            else if(type == UserTypes.Municipal)
            {
                if(hasAsterFirst(jLabel9.getText()))
                {
                    jLabel9.setText(getWithoutAster(jLabel9.getText()));
                }
                if(hasAsterFirst(jLabel8.getText()))
                {
                    jLabel8.setText(getWithoutAster(jLabel8.getText()));
                }
                if(hasAsterFirst(jLabel11.getText()))
                {
                    jLabel11.setText(getWithoutAster(jLabel11.getText()));
                }
            }
        }
    }

    private void provActionPerformed(java.awt.event.ActionEvent evt)
    {
        if(!(prov_field.getSelectedValue() instanceof Integer))
        {
            munic_field.setEnabled(true);
            ResetCombo(munic_field, true);
            FillCombo(BDUtilities.getMunicipios(prov_field.getSelectedValue().toString()), munic_field);
            if((Integer)user_type_field.getSelectedValue() != -1)
            {
                UserTypes type = UserTypes.values()[(Integer)user_type_field.getSelectedValue()-1];
                if(type == UserTypes.Area_Protegida)
                {
                    ap_field.setEnabled(true);
                    ResetCombo(ap_field, true);
                    FillCombo(BDUtilities.getAPFromProv(prov_field.getSelectedValue().toString()), ap_field);
                }
                else if(type == UserTypes.Unidad_Silvicola)
                {
                    us_field.setEnabled(true);
                    ResetCombo(us_field, true);
                    FillCombo(BDUtilities.getUSFromProv(prov_field.getSelectedValue().toString()), us_field);
                }
                else if(type == UserTypes.EFI)
                {
                    efi_field.setEnabled(true);
                    ResetCombo(efi_field, true);
                    FillCombo(BDUtilities.getEFIFromProv(prov_field.getSelectedValue().toString()), efi_field);
                }
            }
        }
    }

    private void municActionPerformed(java.awt.event.ActionEvent evt)
    {
        if(n_munic)
        {
            n_munic=false;
            return;
        }
        if(munic_field.getItemCount()>0)
        {
            if(!(munic_field.getSelectedValue() instanceof Integer))
            {
                if((Integer)user_type_field.getSelectedValue() != -1)
                {
                    UserTypes type = UserTypes.values()[(Integer)user_type_field.getSelectedValue()-1];
                    if(type == UserTypes.Area_Protegida)
                    {
                        ap_field.setEnabled(true);
                        ResetCombo(ap_field, true);
                        FillCombo(BDUtilities.getAPFromMunic(munic_field.getSelectedValue().toString()), ap_field);
                    }
                    else if(type == UserTypes.Unidad_Silvicola)
                    {
                        us_field.setEnabled(true);
                        ResetCombo(us_field, true);
                        FillCombo(BDUtilities.getUSFromMunic(munic_field.getSelectedValue().toString()), us_field);
                    }
                }
            }
        }
    }

    private void EntityActionPerformed(java.awt.event.ActionEvent evt)
    {
        if(munic_field.getSelectedValue() == null || !munic_field.getSelectedValue().toString().equals("-1"))
        {
            return;
        }
        UserTypes type = UserTypes.values()[(Integer)user_type_field.getSelectedValue()-1];
        String id;
        if(type == UserTypes.Unidad_Silvicola)
        {
            if(us_field.getSelectedValue()== null || us_field.getSelectedValue().toString().equals("-1"))
            {
                return;
            }
            id = BDUtilities.getMunicFromEntity(type, us_field.getSelectedValue().toString());
        }
        else if(type == UserTypes.Area_Protegida)
        {
            if(ap_field.getSelectedValue()== null || ap_field.getSelectedValue().toString().equals("-1"))
            {
                return;
            }
            id = BDUtilities.getMunicFromEntity(type, ap_field.getSelectedValue().toString());
        }
        else
        {
            return;
        }
        n_munic = true;
        munic_field.setSelectedValue(id);
    }

    private boolean hasAsterFirst(String str)
    {
        return str.charAt(0) == '*';
    }

    private String getWithoutAster(String str)
    {
        char[] leters = new char[str.length()-1];
        if(str.charAt(0) != '*')
        {
            return str;
        }
        for(int i=1; i<str.length(); i++)
        {
            leters[i-1] = str.charAt(i);
        }
        return new String(leters);
    }

    private void ResetWindow()
    {
        login_field.setText("");
        passw_field.setText("");
        repeat_passw_field.setText("");
        prop_field.setText("");
        ResetCombo(user_type_field,false);
        ResetCombo(munic_field,true);
        ResetCombo(prov_field,false);
        ResetCombo(ap_field,true);
        ResetCombo(us_field,true);
        ResetCombo(efi_field,true);
        prov_field.setEnabled(false);
        munic_field.setEnabled(false);
        ap_field.setEnabled(false);
        us_field.setEnabled(false);
        efi_field.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acept;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField login_field;
    private javax.swing.JPasswordField passw_field;
    private javax.swing.JPasswordField repeat_passw_field;
    // End of variables declaration//GEN-END:variables

    private Adv_ComboBox user_type_field;
    private Adv_ComboBox munic_field;
    private Adv_ComboBox prov_field;
    private Adv_ComboBox ap_field;
    private Adv_ComboBox us_field;
    private javax.swing.JTextField prop_field;
    private javax.swing.JLabel jLabel11;
    private Adv_ComboBox efi_field;
    private boolean n_munic = false;
}
