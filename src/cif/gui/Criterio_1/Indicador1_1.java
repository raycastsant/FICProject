/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Indicador1_1.java
 *
 * Created on 25/10/2012, 05:11:33 PM
 */

package cif.gui.Criterio_1;

import cif.bd.DBAccess;
import cif.gui.JF_Principal;
import cif.utiles.utiles;
import java.awt.Container;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author casa
 */
public class Indicador1_1 extends javax.swing.JPanel {
    private final String id,tablename,tag;
    private  Integer anno;
    private final Object[][] result11;
    JF_Principal princ;


    /** Creates new form Indicador1_1 */
    public Indicador1_1(String id,JF_Principal princ,String tablename,String tag,Object[][] result11) {
        this.id=id;
        this.princ=princ;
        this.tablename=tablename;
        this.tag=tag;
        this.result11=result11;
        initComponents();
        anno=princ.getSelectedYear();
        if (tag.equals("modify")) {
            this.jTextField_BN.setText(result11[0][0].toString());
            this.jTextField_PE.setText(result11[0][1].toString());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField_PE = new javax.swing.JTextField();
        jTextField_BN = new javax.swing.JTextField();
        jButton_Aceptar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del indicador"));

        jLabel2.setText("Bosques naturales(ha):");

        jLabel3.setText("Plantaciones establecidas(ha):");

        jTextField_PE.setText("0.0");
        jTextField_PE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_PEKeyTyped(evt);
            }
        });

        jTextField_BN.setText("0.0");
        jTextField_BN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_BNKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_PE)
                    .addComponent(jTextField_BN, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_BN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_PE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton_Aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/button-accept.png"))); // NOI18N
        jButton_Aceptar.setText("Aceptar");
        jButton_Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_Aceptar)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Aceptar)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AceptarActionPerformed
    try {
            Double bosqnat = java.lang.Double.parseDouble(jTextField_BN.getText());
            Double plant = java.lang.Double.parseDouble(jTextField_PE.getText());
            int existe;
            Double bn = java.lang.Double.parseDouble(jTextField_BN.getText());
            Double pe = java.lang.Double.parseDouble(jTextField_PE.getText());
            Double suma11 = bn + pe;
            Object[][] obj_ib=DBAccess.selectIndBoscosidad(id, princ.getSelectedYear(), gettablename12());
            if(obj_ib.length==0)
            {
                JOptionPane.showConfirmDialog(princ, "Antes de introducir los datos de este indicador debe realizar el Indicador \r\n1.2-Índice de Boscosidad para esta entidad en el año "+princ.getSelectedYear()+".", "Advertencia!!!", JOptionPane.CLOSED_OPTION,JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                return;
            }
            Double sumaib=java.lang.Double.parseDouble(obj_ib[0][0].toString());
            if(sumaib>=suma11)
            {
                try {
                    if (tag.equals("insert")) {
                       // if (anno == princ.getSelectedYear()) {
                            existe = DBAccess.verificarPkey(id, princ.getSelectedYear(), tablename);
                            if (existe != 1) {
                                DBAccess.insertTAC(id, princ.getSelectedYear(), bosqnat, plant, tablename);
                                jTextField_BN.setText("0.0");
                                jTextField_PE.setText("0.0");
                            } else {
                                JOptionPane.showConfirmDialog(this, "Ya existen datos para esta entidad en el año " + princ.getSelectedYear() + ".", "Error!!!", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
                            }
                       /* }
                        else
                        {

                        }*/
                    } else if (tag.equals("modify")) {
                        if (anno == princ.getSelectedYear()) {
                            DBAccess.updateTAC(id, princ.getSelectedYear(), anno, bosqnat, plant, tablename);
                            JOptionPane.showConfirmDialog(this, "Los datos han sido guardados satisfactoriamente.", "Confirmación!!!", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
                            anno = princ.getSelectedYear();
                        } else {
                            existe = DBAccess.verificarPkey(id, princ.getSelectedYear(), tablename);
                            if (existe != 1) {
                                System.out.println("--vent 11 mod no existe");
                                DBAccess.updateTAC(id, princ.getSelectedYear(), anno, bosqnat, plant, tablename);
                                JOptionPane.showConfirmDialog(this, "Los datos han sido guardados satisfactoriamente.", "Confirmación!!!", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
                                anno = princ.getSelectedYear();
                            } else {
                                JOptionPane.showConfirmDialog(this, "Ya existen datos para esta entidad en el año " + princ.getSelectedYear() + ".", "Error!!!", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Indicador1_1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                JOptionPane.showConfirmDialog(this, "El TAC no puede ser mayor que la Superficie\r\n Geográfica para esta entidad en el año " + princ.getSelectedYear() + ".", "Error!!!", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
            }
            } catch (SQLException ex) {
                Logger.getLogger(Indicador1_1.class.getName()).log(Level.SEVERE, null, ex);
            }
}//GEN-LAST:event_jButton_AceptarActionPerformed

    private void jTextField_BNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_BNKeyTyped
        // TODO add your handling code here:
        utiles.SoloNumber(evt,jTextField_BN.getText());
    }//GEN-LAST:event_jTextField_BNKeyTyped

    private void jTextField_PEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PEKeyTyped
        // TODO add your handling code here:
        utiles.SoloNumber(evt,jTextField_PE.getText());
    }//GEN-LAST:event_jTextField_PEKeyTyped

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        if(evt.getAncestorParent() instanceof Container)
        {
            jTextField_BN.requestFocusInWindow();
        }
    }//GEN-LAST:event_formAncestorAdded

     private Object[][] getresultado1_2() throws SQLException{
        Object[][] res12 = null;
        res12=DBAccess.selectIndBoscosidad(id,princ.getSelectedYear(),gettablename12());
        return res12;
    }

     private String gettablename12()
    {
        String table;
        if (tablename.equals("c1_1_ap_totalareacubierta"))
        {
            table="c1_2_ap_indiceboscosidad";
        }
        else if(tablename.equals("c1_1_otros_totalareacubierta"))
        {
            table="c1_2_otros_indiceboscosidad";
        }
        else
        {
             table="c1_2_us_indiceboscosidad";
        }
        return table;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Aceptar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField jTextField_BN;
    public javax.swing.JTextField jTextField_PE;
    // End of variables declaration//GEN-END:variables

}
