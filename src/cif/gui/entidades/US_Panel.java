/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * US_Panel.java
 *
 * Created on 15/01/2013, 01:59:33 PM
 */

package cif.gui.entidades;

import cif.adminstration.bd.DBQueries;
import cif.adminstration.utiles.Utils;
import cif.bd.BDUtilities;
import cif.utiles.Adv_ComboBox;
import java.awt.Color;
import java.awt.Container;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Pedro
 */
public class US_Panel extends javax.swing.JPanel {

    boolean recursive=false;
    private static final int INSERT = 0;
    private static final int UPDATE = 1;
    private int action;
    private String actual_id; //esta variable tiene el id de la US que se est√© modificando
    /** Creates new form US_Panel */
    public US_Panel() {
        init();
        FillCombo(BDUtilities.getAllEFI(), efi);
        FillCombo(BDUtilities.getProvincias(), prov);
        action = INSERT;
    }

    public US_Panel(String nombre, String name_efi, String municipio)
    {
        init();
        FillCombo(BDUtilities.getAllEFI(), efi);
        FillCombo(BDUtilities.getProvincias(), prov);
        action = UPDATE;
        name.setText(nombre);
        efi.setSelectedItem(name_efi);
        String provincia = BDUtilities.getProvFromNameEFI(name_efi);
        prov.setSelectedValue(provincia);
      //  FillCombo(BDUtilities.getMunicipios(provincia), munic);
        munic.setSelectedItem(municipio);
        actual_id = BDUtilities.getUSId(nombre, name_efi, munic.getSelectedValue().toString());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        acept = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jLabel1.setText("*Nombre:");

        jLabel2.setText("*EFI:");

        jLabel3.setText("Provincia:");

        cancel.setText("Cancelar");
        cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cancelMousePressed(evt);
            }
        });
        cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cancelKeyTyped(evt);
            }
        });

        acept.setText("Aceptar");
        acept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aceptMousePressed(evt);
            }
        });
        acept.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aceptKeyTyped(evt);
            }
        });

        jLabel4.setText("*Municipio:");

        jLabel5.setText("(*)Obligatorio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(acept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(253, 253, 253)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancel)
                        .addComponent(acept))
                    .addComponent(jLabel5))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void init() {

        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        efi = new Adv_ComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        prov = new Adv_ComboBox();
        cancel = new javax.swing.JButton();
        acept = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        munic = new Adv_ComboBox();
        jLabel5 = new javax.swing.JLabel();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        setFocusCycleRoot(true);
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setText("*Nombre:");

        jLabel2.setText("*EFI:");

        jLabel3.setText("Provincia:");

        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/button-cancel.png")));
        cancel.setText("Cancelar");
        cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cancelMousePressed(evt);
            }
        });
        cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cancelKeyTyped(evt);
            }
        });

        acept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/button-accept.png")));
        acept.setText("Aceptar");
        acept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aceptMousePressed(evt);
            }
        });
        acept.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aceptKeyTyped(evt);
            }
        });

        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameKeyTyped(evt);
            }
        });

        jLabel4.setText("*Municipio:");

        jLabel5.setText("(*)Obligatorio");

        prov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provActionPerformed();
            }
        });

        efi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                efiActionPerformed();
            }
        });

        munic.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(20)//.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(prov, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(efi, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22)//.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(acept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(munic, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(efi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(prov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(munic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancel)
                        .addComponent(acept))
                    .addComponent(jLabel5))
                .addContainerGap())
        );
    }// </editor-fold>

    private void cancelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelMousePressed
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1)
        {
            setVisible(false);
        }
    }//GEN-LAST:event_cancelMousePressed

    private void aceptMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aceptMousePressed
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1)
        {
            Insert();
        }
    }//GEN-LAST:event_aceptMousePressed

    private void aceptKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aceptKeyTyped
        if(evt.getKeyChar() == evt.VK_ENTER)
        {
            Insert();
        }
    }//GEN-LAST:event_aceptKeyTyped

    private void cancelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelKeyTyped
        if(evt.getKeyChar() == evt.VK_ENTER)
        {
            setVisible(false);
        }
    }//GEN-LAST:event_cancelKeyTyped

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {
        if(evt.getAncestorParent() instanceof Container)
        {
            name.requestFocusInWindow();
        }
    }

    private void FillCombo(Object[][] types, Adv_ComboBox combo)
    {
        combo.addItem(-1, "<Seleccionar>");
        for(int i=0; i<types.length; i++)
        {
            Object[] aux = types[i];
            combo.addItem(aux[0], aux[1]);
        }
    }

    private void provActionPerformed()
    {
        if(prov.getSelectedValue() != null && !prov.getSelectedValue().toString().equals("-1"))
        {
            ResetCombo(munic, true);
            FillCombo(BDUtilities.getMunicipios(prov.getSelectedValue().toString()), munic);
            munic.setEnabled(true);
        }
        else
        {
           // recursive = false;
            ResetCombo(munic, true);
            munic.setEnabled(false);
        }
    }

    private void ResetCombo(JComboBox combo,boolean erase)
    {
        if(erase)
        {
            combo.removeAllItems();
            return;
        }
        combo.setSelectedIndex(0);
    }

    private void efiActionPerformed()
    {
        if(efi.getSelectedValue() != null && !efi.getSelectedValue().toString().equals("-1"))
        {
            prov.setSelectedValue(BDUtilities.getProvFromEFI(efi.getSelectedValue().toString()));
        }
    }

    private void nameKeyTyped(java.awt.event.KeyEvent evt)
    {
        if(!Character.isLetter(evt.getKeyChar()) && evt.getKeyChar() != ' ')
        {
            evt.consume();
        }
    }

    private void Insert()
    {
        String nombre,municipio,own_efi,provincia;
        boolean error = false;
        nombre = name.getText().toUpperCase();
        if(nombre.isEmpty())
        {
            error = true;
            jLabel1.setForeground(Color.red);
        }
        else
        {
            jLabel1.setForeground(Color.black);
        }
        own_efi = efi.getSelectedValue().toString();
        if(own_efi.equals("-1"))
        {
            error = true;
            jLabel2.setForeground(Color.red);
        }
        else
        {
            jLabel2.setForeground(Color.black);
        }
        provincia = prov.getSelectedValue().toString();
        if(!BDUtilities.getProvFromEFI(own_efi).equals(provincia))
        {
            JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"La EFI seleccionada no pertenece a la provincia escogida.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        municipio = null;
        if(munic.getSelectedValue() != null)
        {
            municipio = munic.getSelectedValue().toString();
        }
        if(municipio == null || municipio.equals("-1"))
        {
            error = true;
            jLabel4.setForeground(Color.red);
        }
        else
        {
            jLabel4.setForeground(Color.black);
        }
        if(error)
        {
            JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Existen campos en blanco que son de caracter obligatorio.", "Error", JOptionPane.ERROR_MESSAGE);
            error = false;
            return;
        }
        else
        {
            if(!DBQueries.ExistUS(nombre, own_efi, municipio))
            {
                try
                {
                    if(action == INSERT)
                    {
                        DBQueries.InsertUS(nombre, own_efi, municipio, provincia);
                        ResetWindow();
                    }
                    else
                    {
                        DBQueries.UpdateUS(nombre, own_efi, municipio, actual_id);
                        JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Los datos se modificaron satisfactoriamente.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Ocurri√≥ el siguiente error \n\r" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            else
            {
                JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Esta Unidad Silv√≠cola ya existe.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
    }

    private void ResetWindow()
    {
        name.setText("");
        ResetCombo(efi, false);
        ResetCombo(prov, false);
        ResetCombo(munic, true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acept;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField name;
    // End of variables declaration//GEN-END:variables
    private Adv_ComboBox efi;
    private Adv_ComboBox munic;
    private Adv_ComboBox prov;
}
