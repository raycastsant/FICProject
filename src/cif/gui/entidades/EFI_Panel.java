/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EFI_Panel.java
 *
 * Created on 23/01/2013, 02:46:43 PM
 */

package cif.gui.entidades;

import cif.adminstration.bd.DBQueries;
import cif.adminstration.utiles.Utils;
import cif.bd.BDUtilities;
import cif.utiles.Adv_ComboBox;
import java.awt.Color;
import java.awt.Container;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Pedro
 */
public class EFI_Panel extends javax.swing.JPanel {

    /** Creates new form EFI_Panel */
    private static final int INSERT = 0;
    private static final int UPDATE = 1;
    private int action;
    private String actual_id; //esta variable tiene el id de la US que se est√© modificando

    public EFI_Panel() {
        init();
        FillCombo(BDUtilities.getProvincias(), prov_field);
        action = INSERT;
    }

    public EFI_Panel(String nombre, String prov)
    {
        init();
        FillCombo(BDUtilities.getProvincias(), prov_field);
        action = UPDATE;
        name_field.setText(nombre);
        prov_field.setSelectedItem(prov);
        actual_id = BDUtilities.getEFIId(nombre, prov);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label_name = new javax.swing.JLabel();
        label_prov = new javax.swing.JLabel();
        name_field = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        acept = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de la EFI"));

        label_name.setText("*Nombre:");

        label_prov.setText("*Provincia:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label_prov, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_name)
                    .addComponent(name_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label_prov)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancel.setText("Cancelar");

        acept.setText("Aceptar");

        jLabel1.setText("(*)Obligatorio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(acept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(acept)
                    .addComponent(jLabel1))
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void init()
    {
        jPanel1 = new javax.swing.JPanel();
        label_name = new javax.swing.JLabel();
        label_prov = new javax.swing.JLabel();
        name_field = new javax.swing.JTextField();
        prov_field = new Adv_ComboBox();
        cancel = new javax.swing.JButton();
        acept = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        
        setFocusCycleRoot(true);
        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de la EFI"));

        label_name.setText("*Nombre:");

        label_prov.setText("*Provincia:");

        name_field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label_prov, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name_field, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prov_field, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_name)
                    .addComponent(name_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_prov)
                    .addComponent(prov_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/button-cancel.png")));
        cancel.setText("Cancelar");
        cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelMouseClicked(evt);
            }
        });

        cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cancelKeyTyped(evt);
            }
        });

        acept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/button-accept.png")));
        acept.setText("Aceptar");
        acept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                aceptMouseClicked(evt);
            }
        });

        acept.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aceptKeyTyped(evt);
            }
        });

        jLabel1.setText("(*)Obligatorio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(acept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(acept)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>

    private void nameKeyTyped(java.awt.event.KeyEvent evt)
    {
        if(evt.getKeyChar() == '*' || evt.getKeyChar() == '/' || evt.getKeyChar() == '\\' || evt.getKeyChar() == '+'
                || evt.getKeyChar() == '&' || evt.getKeyChar() == '%' || evt.getKeyChar() == '$' || evt.getKeyChar() == '@'
                || evt.getKeyChar() == '>' || evt.getKeyChar() == '<' || evt.getKeyChar() == '!' || evt.getKeyChar() == '#'
                || evt.getKeyChar() == '?' || evt.getKeyChar() == ':' || evt.getKeyChar() == '=')
        {
            evt.consume();
        }
    }

    private void aceptKeyTyped(java.awt.event.KeyEvent evt) {
        if(evt.getKeyChar() == evt.VK_ENTER)
        {
            Insert();
        }
    }

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {
        if(evt.getAncestorParent() instanceof Container)
        {
            name_field.requestFocusInWindow();
        }
    }

    private void cancelKeyTyped(java.awt.event.KeyEvent evt) {
        if(evt.getKeyChar() == evt.VK_ENTER)
        {
            setVisible(false);
        }
    }

    private void cancelMouseClicked(java.awt.event.MouseEvent evt) {
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1)
        {
            setVisible(false);
        }
    }

    private void aceptMouseClicked(java.awt.event.MouseEvent evt) {
        if(evt.getButton() == java.awt.event.MouseEvent.BUTTON1)
        {
            Insert();
        }
    }

    private void FillCombo(Object[][] types, Adv_ComboBox combo)
    {
        combo.addItem(-1, "<Seleccionar>");
        for(int i=0; i<types.length; i++)
        {
            Object[] aux = types[i];
            combo.addItem(aux[0], aux[1]);
        }
    }
    private void Insert()
    {
        String nombre,provincia;
        boolean error = false;
        nombre = name_field.getText().toUpperCase();
        if(nombre.isEmpty())
        {
            error = true;
            label_name.setForeground(Color.red);
        }
        else
        {
            label_name.setForeground(Color.black);
        }
        provincia = prov_field.getSelectedValue().toString();
        if(provincia != null && !provincia.equals("-1"))
        {
            label_prov.setForeground(Color.black);
        }
        else
        {
            error = true;
            label_prov.setForeground(Color.red);
        }
        if(error)
        {
            JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Existen campos en blanco que son de caracter obligatorio.", "Error", JOptionPane.ERROR_MESSAGE);
            error = false;
            return;
        }
        else
        {
            try
            {
                if(action == INSERT)
                {

                    if(!DBQueries.ExistEFI(nombre, provincia))
                    {
                        DBQueries.InsertEFI(nombre, provincia);
                        ResetWindow();
                    }
                    else
                    {
                        JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Esta EFI ya existe.", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                }
                else
                {
                    DBQueries.UpdateEFI(nombre, provincia, actual_id);
                    JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Los datos se modificaron satisfactoriamente.", "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            catch(Exception e)
            {
                JOptionPane.showInternalMessageDialog(Utils.getParentFrame(this).getContentPane(),"Ocurri√≥ el siguiente error \n\r" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
    }

    private void ResetWindow()
    {
        name_field.setText("");
        ResetCombo(prov_field, false);
    }

    private void ResetCombo(JComboBox combo,boolean erase)
    {
        if(erase)
        {
            combo.removeAllItems();
            return;
        }
        combo.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acept;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_prov;
    private javax.swing.JTextField name_field;
    // End of variables declaration//GEN-END:variables
    private Adv_ComboBox prov_field;
}
